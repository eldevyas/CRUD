// Reverse Corners
#curved-corner-bottomleft,
#curved-corner-bottomright,
#curved-corner-topleft,
#curved-corner-topright {
    width: 50px;
    height: 50px;
    overflow: hidden;
    position: relative;
    transform: scale(0.6);
}

#curved-corner-bottomright {
    position: absolute;
    bottom: 0;
    right: 0;
    transform-origin: bottom right;
}

#curved-corner-topright {
    position: absolute;
    top: 0;
    right: 0;
    transform-origin: top right;
}

#curved-corner-bottomleft:before,
#curved-corner-bottomright:before,
#curved-corner-topleft:before,
#curved-corner-topright:before {
    content: "";
    display: block;
    width: 200%;
    height: 200%;
    position: absolute;
    border-radius: 50%;
}

#curved-corner-bottomleft:before {
    bottom: 0;
    left: 0;
    box-shadow: -50px 50px 0 0 $C5;
}

#curved-corner-bottomright:before {
    bottom: 0;
    right: 0;
    box-shadow: 50px 50px 0 0 $C5;
}

#curved-corner-topleft:before {
    top: 0;
    left: 0;
    box-shadow: -50px -50px 0 0 $C5;
}

#curved-corner-topright:before {
    top: 0;
    right: 0;
    box-shadow: 50px -50px 0 0 $C5;
}

// MacOS Cursor
.loader {
    position: relative;
    transform: scale(0.35);
    width: 100px;
    height: 100px;
    border-radius: 50%;
    overflow: hidden;
    animation: animate 1s linear infinite;
}

.loader span {
    position: absolute;
    width: 100%;
    height: 100%;
    background: #f00;
    left: 50%;
    border-radius: 50%;
    transform-origin: left;
}

.loader span:nth-child(1) {
    background: #0fa503;
    transform: rotate(0deg);
    z-index: 2;
}

.loader span:nth-child(2) {
    background: #ffd203;
    transform: rotate(60deg);
    z-index: 3;
}

.loader span:nth-child(3) {
    background: #54cd28;
    transform: rotate(120deg);
    z-index: 4;
}

.loader span:nth-child(4) {
    background: #129cf5;
    transform: rotate(180deg);
    z-index: 5;
}

.loader span:nth-child(5) {
    background: #bb5ed3;
    transform: rotate(240deg);
    z-index: 6;
}

.loader span:nth-child(6) {
    background: #ff4f45;
    transform: rotate(300deg);
    z-index: 7;
    overflow: hidden;
}

.loader span:nth-child(6):before {
    content: '';
    position: absolute;
    top: 45px;
    left: -72px;
    width: 100%;
    height: 100%;
    background: #ffd203;
    border-radius: 50%;
    z-index: 2;
}

.loader span:nth-child(6):after {
    content: '';
    position: absolute;
    top: 42px;
    left: -23px;
    width: 100%;
    height: 100%;
    background: #fea503;
    border-radius: 50%;
}

@keyframes animate {
    0% {
        transform: rotate(359deg) scale(0.35);
    }
    100% {
        transform: rotate(0deg) scale(0.35);
    }
}

// Alert Message
$nfWidth: 300px;
$nfHeight: 40px;
$nfMargin: 20px;
.NotificationsWrapper {
    position: fixed;
    bottom: 0;
    left: 0;
    margin: $nfMargin;
    width: $nfWidth;
    height: 100%;
    z-index: 200;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
    .Alert {
        position: relative;
        width: $nfWidth;
        height: $nfHeight;
        background-color: rgba(#fff, 0.25);
        border: 1px solid $C5;
        border-radius: 5px;
        color: $C5;
        font-size: 12px;
        @include FlexRowJustifyCenter;
        @include MacOSBoxShadow;
        overflow: hidden;
        // animation: SlideFromLeft 3000ms ease forwards;
        &::-webkit-scrollbar {
            display: none;
        }
        .Alert-content {
            width: 90%;
            height: 100%;
            @include FlexRowJustifyStart;
            svg {
                margin-right: 10px;
            }
        }
        @keyframes SlideFromLeft {
            0% {
                transform: translateX(-150%);
            }
            20% {
                transform: translateX(0);
            }
            80% {
                transform: translateX(0);
            }
            100% {
                transform: translateX(-150%);
            }
        }
    }
    .Alert.success {
        background-color: rgba(#fff, 0.25);
        border: 1px solid $C5;
        color: $C5;
    }
    .Alert.error {
        $error: #ff4f45;
        background-color: rgba($error, 1);
        border: 1px solid $C5;
        color: $C5;
    }
}


/** Used to define container behavior: width, position: fixed etc... **/

$nfWidth: 350px;
$nfHeight: 30px;
$nfMargin: 20px;
.Toastify__toast-container {
    position: fixed;
    bottom: 0;
    left: 0;
    margin: $nfMargin;
    width: $nfWidth;
    height: auto;
    max-height: 100%;
    z-index: 200;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
}

.Toastify__toast-container--bottom-left {
    height: auto;
    max-height: 100%;
    min-height: 40px;
}


/** Classes for the displayed toast **/

.Toastify__toast {
    width: 100%;
    height: $nfHeight;
    max-height: $nfHeight;
    position: relative;
    background-color: rgba(#fff, 0.25);
    backdrop-filter: blur(25px);
    border: 1px solid $C5;
    border-radius: 5px;
    color: $C5;
    font-size: 12px;
    padding: 0;
    margin: 0;
    margin-top: 20px;
    padding-left: 5px;
    @include FlexRowJustifyCenter;
    @include MacOSBoxShadow;
    overflow: hidden;
    // animation: SlideFromLeft 3000ms ease forwards;
    &::-webkit-scrollbar {
        display: none;
    }
}

:root {
    --toastify-toast-min-height: 40px;
    --toastify-toast-max-height: 40px;
}

.Toastify__toast {}


/** Used to position the icon **/

.Toastify__toast-icon svg {
    color: $C5 !important;
    fill: $C5;
}


/** Classes for the close button. Better use your own closeButton **/

.Toastify__close-button {
    display: none;
}